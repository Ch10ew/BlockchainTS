// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  password String
  userType UserType

  Artwork         Artwork[]
  fromTransaction Transaction[] @relation("fromUser")
  toTransaction   Transaction[] @relation("toUser")
  fromRequest     Request[]     @relation("fromRequest")
  toRequest       Request[]     @relation("toRequest")
  OwnedArtwork    Artwork[]     @relation("artOwner")
}

model Artwork {
  id          String @id @default(uuid())
  label       String @unique
  artworkPath String

  artistId    String
  artist      User          @relation(fields: [artistId], references: [id])
  ownerId     String
  owner       User          @relation(name: "artOwner", fields: [ownerId], references: [id])
  Transaction Transaction[]
  Request     Request[]
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  artworkId String
  artwork   Artwork @relation(fields: [artworkId], references: [id])
  fromId    String
  from      User    @relation(name: "fromUser", fields: [fromId], references: [id])
  toId      String
  to        User    @relation(name: "toUser", fields: [toId], references: [id])
}

model Request {
  id     String        @id @default(uuid())
  status RequestStatus @default(PENDING)

  artworkId String
  artwork   Artwork @relation(fields: [artworkId], references: [id])
  fromId    String
  from      User    @relation(name: "fromRequest", fields: [fromId], references: [id])
  toId      String
  to        User    @relation(name: "toRequest", fields: [toId], references: [id])
}

enum UserType {
  ARTIST
  COLLECTOR
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}
